<?xml version="1.0"?>
<launch>

  <!-- these are the arguments you can pass this launch file, for example paused:=true -->
  <arg name="paused" default="true"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="extra_gazebo_args" default=""/>
  <arg name="gui" default="true"/>
  <arg name="recording" default="false"/>
  <!-- Note that 'headless' is currently non-functional.  See gazebo_ros_pkgs issue #491 (-r arg does not disable
       rendering, but instead enables recording). The arg definition has been left here to prevent breaking downstream
       launch files, but it does nothing. -->
  <arg name="headless" default="false"/>
  <arg name="debug" default="false"/>
  <arg name="physics" default="ode"/>
  <arg name="verbose" default="false"/>
  <arg name="output" default="screen"/>
  <arg name="world_name" default="/home/kaushikthegreat/catkin_ws/src/rugbot2/World/SLAM.world"/> <!-- Note: the world_name is with respect to GAZEBO_RESOURCE_PATH environmental variable -->
  <arg name="respawn_gazebo" default="false"/>
  <arg name="use_clock_frequency" default="false"/>
  <arg name="pub_clock_frequency" default="100"/>
  <arg name="enable_ros_network" default="true" />
  <arg name="server_required" default="false"/>
  <arg name="gui_required" default="false"/>
  

 
 
 
 
 
 
  <!-- set use_sim_time flag -->
  
  <param name="/use_sim_time" value="$(arg use_sim_time)"/>
  <param name="robot_description" textfile="/home/kaushikthegreat/catkin_ws/src/rugbot2/model/model.urdf" />
  <arg name="rvizconfig" default="/home/kaushikthegreat/catkin_ws/src/rugbot2/config/urdf.rviz" />
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"/>
  <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher"/>
  <node name="rviz" pkg="rviz" type="rviz" args="-d $(arg rvizconfig)" />
  
  
  <!--<node pkg="robot_localization" type="ekf_localization_node" name="ekf_localization_node" clear_params="true">
    <param name="use_sim_time" value="true"/>
    <rosparam file="/home/kaushikthegreat/catkin_ws/src/rugbot2/config/robot_localization.yaml" command="load"/>
  </node> -->
  
  
  <!--<node pkg="gmapping" type="slam_gmapping" name="slam_gmapping" output="screen">
    <param name="base_frame" value="base_footprint"/>
    <param name="odom_frame" value="odom"/>
    <param name="map_frame" value="map"/>
    <remap from="scan" to="/rugbot2/scan" />
  </node>-->
  
  <node pkg="amcl" type="amcl" name="amcl">
    <param name="use_map_topic" value="true"/>
    <param name="map_topic" value="/map"/>
    <param name="min_particles" value="100"/>
    <param name="max_particles" value="500"/>
    <param name="laser_max_beams" value="360"/>
    <param name="laser_max_range" value="20"/>
    <param name="laser_min_range" value="0.3"/>
    <param name="update_min_d" value="0.1"/>
    <param name="update_min_a" value="0.05"/>
    <remap from="scan" to="/rugbot2/scan" />
  </node>
  
  
  <arg name="map_file" default="/home/kaushikthegreat/catkin_ws/src/rugbot2/slamaps/Maps.yaml"/>
" <node name="map_server" pkg="map_server" type="map_server" args="$(arg map_file)"/> 

  
  <!--<node name="centering_node" pkg="rugbot2" type="centering_node.py" output="screen"/>-->
 
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  <!-- set command arguments -->
  <arg unless="$(arg paused)" name="command_arg1" value=""/>
  <arg     if="$(arg paused)" name="command_arg1" value="-u"/>
  <arg unless="$(arg recording)" name="command_arg2" value=""/>
  <arg     if="$(arg recording)" name="command_arg2" value="-r"/>
  <arg unless="$(arg verbose)" name="command_arg3" value=""/>
  <arg     if="$(arg verbose)" name="command_arg3" value="--verbose"/>
  <arg unless="$(arg debug)" name="script_type" value="gzserver"/>
  <arg     if="$(arg debug)" name="script_type" value="debug"/>

  
  <!-- start gazebo server-->
  <group if="$(arg use_clock_frequency)">
    <param name="gazebo/pub_clock_frequency" value="$(arg pub_clock_frequency)" />
  </group>
  <group>
    <param name="gazebo/enable_ros_network" value="$(arg enable_ros_network)" />
  </group>
  <node name="gazebo" pkg="gazebo_ros" type="$(arg script_type)" respawn="$(arg respawn_gazebo)" output="$(arg output)"
	args="$(arg command_arg1) $(arg command_arg2) $(arg command_arg3) -e $(arg physics) $(arg extra_gazebo_args) $(arg world_name)"
  required="$(arg server_required)" />

  <!-- start gazebo client -->
  <group if="$(arg gui)">
    <node name="gazebo_gui" pkg="gazebo_ros" type="gzclient" respawn="false" output="$(arg output)" args="$(arg command_arg3)"
    required="$(arg gui_required)"/>
  </group>

</launch>
